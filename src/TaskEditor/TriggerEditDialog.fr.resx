<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="$this.Text" xml:space="preserve">
    <value>Nouveau déclencheur</value>
  </data>
  <data name="activateCheckBox.Text" xml:space="preserve">
    <value>Activer</value>
  </data>
  <data name="advSettingsGroup.Text" xml:space="preserve">
    <value>Paramètres avancés</value>
  </data>
  <data name="cancelBtn.Text" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="delayCheckBox.Text" xml:space="preserve">
    <value>Report maximal de la tâche (aléatoire) :</value>
  </data>
  <data name="durationLabel.Text" xml:space="preserve">
    <value>pour une durée de :</value>
  </data>
  <data name="enabledCheckBox.Text" xml:space="preserve">
    <value>Activé</value>
  </data>
  <data name="expireCheckBox.Text" xml:space="preserve">
    <value>Expirée</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Paramètres</value>
  </data>
  <data name="idleTab.Text" xml:space="preserve">
    <value>tabPage1</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>Pour modifier les conditions d’inactivité, utilisez la page Conditions dans la feuille Créer une tâche ou Propriétés de la tâche.</value>
  </data>
  <data name="logonAnyUserRadio.Text" xml:space="preserve">
    <value>Tout utilisateur</value>
  </data>
  <data name="logonChgUserBtn.Text" xml:space="preserve">
    <value>Utilisateur ou groupe...</value>
  </data>
  <data name="logonLocalRadio.Text" xml:space="preserve">
    <value>Connexion depuis l’ordinateur local</value>
  </data>
  <data name="logonRemoteRadio.Text" xml:space="preserve">
    <value>Connexion depuis l’ordinateur distant</value>
  </data>
  <data name="logonSpecUserRadio.Text" xml:space="preserve">
    <value>Utilisateur ou groupe spécifique :</value>
  </data>
  <data name="logonTab.Text" xml:space="preserve">
    <value>tabPage2</value>
  </data>
  <data name="logonUserLabel.Text" xml:space="preserve">
    <value>Utilisateur actuel</value>
  </data>
  <data name="okBtn.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="onEventTab.Text" xml:space="preserve">
    <value>tabPage1</value>
  </data>
  <data name="repeatCheckBox.Text" xml:space="preserve">
    <value>Répéter la tâche toutes les :</value>
  </data>
  <data name="schedDailyRadio.Text" xml:space="preserve">
    <value>Tous les jours</value>
  </data>
  <data name="schedMonthlyRadio.Text" xml:space="preserve">
    <value>Tous les mois</value>
  </data>
  <data name="schedOneRadio.Text" xml:space="preserve">
    <value>Une fois</value>
  </data>
  <data name="schedStartLabel.Text" xml:space="preserve">
    <value>Démarrer</value>
  </data>
  <data name="schedWeeklyRadio.Text" xml:space="preserve">
    <value>Hebdomadaire</value>
  </data>
  <data name="startupIntroLabel.Text" xml:space="preserve">
    <value>Aucun autre paramètre n’est requis.</value>
  </data>
  <data name="startupTab.Text" xml:space="preserve">
    <value>tabPage1</value>
  </data>
  <data name="stopAfterDurationCheckBox.Text" xml:space="preserve">
    <value>Arrêter toutes les tâches à l’issue de la durée de répétition</value>
  </data>
  <data name="stopIfRunsCheckBox.Text" xml:space="preserve">
    <value>Arrêter la tâche si elle s’exécute plus de :</value>
  </data>
  <data name="triggerTypeLabel.Text" xml:space="preserve">
    <value>Commencer la tâche :</value>
  </data>
</root>